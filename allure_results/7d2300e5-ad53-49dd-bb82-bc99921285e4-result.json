{"name": "Test increasing ingredient count", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (496, 1210) is out of bounds of viewport dimensions (1280, 649)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2363:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2019:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2018:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1929:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1931:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:493:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31", "trace": "self = <tests.test_main_functionality.TestMainFunctionalities object at 0x000001CCA6363F10>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"6cdff15e-1125-4b6e-a7dc-04429169d339\")>\n\n    @allure.title(\"Test increasing ingredient count\")\n    def test_increasing_count(self, driver):\n        main_page = MainPage(driver)\n        ingredient, counter = Od.return_random_ingredient_with_counter()\n        count_before_adding_ingredient = int(main_page.check_presence_of_element(counter).text)\n>       main_page.add_ingredient_to_the_order(ingredient)\n\ntests\\test_main_functionality.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:32: in add_ingredient_to_the_order\n    self.drag_and_drop_elements(ingredient_locator, Mpl.BOTTOM_BUN)\npages\\base_page.py:62: in drag_and_drop_elements\n    action.drag_and_drop(source, destination).perform()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CCA7938B90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (496, 1210) is out of b...ys.mjs:493:23\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (496, 1210) is out of bounds of viewport dimensions (1280, 649)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nE       assertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2363:11\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\nE       dispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2019:14\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2018:39\nE       dispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1929:27\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1931:7\nE       performActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:493:23\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Add an ingredient to the order", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (496, 1210) is out of bounds of viewport dimensions (1280, 649)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2363:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2019:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2018:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1929:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1931:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:493:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31\n\n", "trace": "  File \"C:\\Users\\NastyaTs\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\NastyaTs\\PycharmProjects\\Diplom\\Diplom_3\\pages\\main_page.py\", line 32, in add_ingredient_to_the_order\n    self.drag_and_drop_elements(ingredient_locator, Mpl.BOTTOM_BUN)\n  File \"C:\\Users\\NastyaTs\\PycharmProjects\\Diplom\\Diplom_3\\pages\\base_page.py\", line 62, in drag_and_drop_elements\n    action.drag_and_drop(source, destination).perform()\n  File \"C:\\Users\\NastyaTs\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"C:\\Users\\NastyaTs\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"C:\\Users\\NastyaTs\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\NastyaTs\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "ingredient_locator", "value": "['xpath', \"//a[@href='/ingredient/61c0c5a71d1f82001bdaaa77']\"]"}], "start": 1724621598604, "stop": 1724621602699}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1724621598573, "stop": 1724621602704, "uuid": "3d59204b-2bc8-474f-adac-83f4313687cc", "historyId": "0f440081a0a059034ccf6facad5c2ce9", "testCaseId": "639bd1bcb37eaa03b4e5904935ab2e5c", "fullName": "tests.test_main_functionality.TestMainFunctionalities#test_increasing_count", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestMainFunctionalities"}, {"name": "host", "value": "LAPTOP-B1V9C35F"}, {"name": "thread", "value": "10908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}